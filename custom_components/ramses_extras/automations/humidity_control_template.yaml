# Ramses Extras - Humidity Control Automation Template
# This template creates automation for humidity monitoring and dehumidifier control
# The integration will substitute the correct device_id and entity names

# === RAMSES EXTRAS AUTOMATIONS - DO NOT EDIT ===
# These automations are managed by the Ramses Extras integration
# They will be updated automatically when the integration configuration changes

- id: "ramses_extras_dehumidifier_control_{{ device_id }}"
  alias: "Dehumidifier Control - {{ device_id }}"
  description: "Controls dehumidifier based on humidity thresholds for device {{ device_id }}"
  triggers:
    - platform: numeric_state
      entity_id: "sensor.{{ device_id_underscore }}_indoor_humidity"
      above: "number.{{ device_id_underscore }}_rel_humid_max"
      for:
        minutes: 2
    - platform: numeric_state
      entity_id: "sensor.{{ device_id_underscore }}_indoor_humidity"
      below: "number.{{ device_id_underscore }}_rel_humid_min"
      for:
        minutes: 2
  conditions:
    - condition: template
      value_template: "{{ is_state('switch.dehumidify_{{ device_id_underscore }}', 'unavailable') == false }}"
  actions:
    - if:
        - condition: template
          value_template: "{{ states('sensor.{{ device_id_underscore }}_indoor_humidity') | float > states('number.{{ device_id_underscore }}_rel_humid_max') | float }}"
      then:
        - service: ramses_extras.set_fan_speed_mode
          data:
            device_id: "{{ device_id }}"
            mode: "high"
            reason: "Humidity control - high humidity detected"
        - service: logbook.log
          data:
            name: "Dehumidifier"
            message: "Activated - Humidity {{ states('sensor.{{ device_id_underscore }}_indoor_humidity') }}% > threshold {{ states('number.{{ device_id_underscore }}_rel_humid_max') }}%"
            entity_id: "sensor.{{ device_id_underscore }}_indoor_humidity"
      else:
        - service: ramses_extras.set_fan_speed_mode
          data:
            device_id: "{{ device_id }}"
            mode: "auto"
            reason: "Humidity control - humidity returned to normal"
        - service: logbook.log
          data:
            name: "Dehumidifier"
            message: "Deactivated - Humidity {{ states('sensor.{{ device_id_underscore }}_indoor_humidity') }}% in normal range"
            entity_id: "sensor.{{ device_id_underscore }}_indoor_humidity"

- id: "ramses_extras_dehumidifier_override_{{ device_id }}"
  alias: "Dehumidifier Manual Override - {{ device_id }}"
  description: "Logs when humidity is high but automation is not controlling fan"
  triggers:
    - platform: template
      value_template: "{{ states('sensor.{{ device_id_underscore }}_indoor_humidity') | float > states('number.{{ device_id_underscore }}_rel_humid_max') | float }}"
  conditions:
    - condition: template
      value_template: "{{ states('sensor.{{ device_id_underscore }}_indoor_humidity') != 'unavailable' }}"
  actions:
    - service: logbook.log
      data:
        name: "Humidity Monitor"
        message: "High humidity detected ({{ states('sensor.{{ device_id_underscore }}_indoor_humidity') }}%) - Manual intervention may be needed"
        entity_id: "sensor.{{ device_id_underscore }}_indoor_humidity"

- id: "ramses_extras_dehumidifier_thresholds_{{ device_id }}"
  alias: "Dehumidifier Default Thresholds - {{ device_id }}"
  description: "Sets default humidity thresholds if not configured"
  triggers:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: "number.{{ device_id_underscore }}_rel_humid_max"
      to: "unavailable"
      for:
        minutes: 5
  conditions:
    - condition: template
      value_template: "{{ states('number.{{ device_id_underscore }}_rel_humid_max') in ['unknown', 'unavailable', ''] or states('number.{{ device_id_underscore }}_rel_humid_min') in ['unknown', 'unavailable', ''] }}"
  actions:
    - service: number.set_value
      entity_id: "number.{{ device_id_underscore }}_rel_humid_max"
      data:
        value: 60
    - service: number.set_value
      entity_id: "number.{{ device_id_underscore }}_rel_humid_min"
      data:
        value: 40
    - service: logbook.log
      data:
        name: "Dehumidifier"
        message: "Set default thresholds - High: 60%, Low: 40%"
        entity_id: "sensor.{{ device_id_underscore }}_indoor_humidity"

# === END RAMSES EXTRAS AUTOMATIONS ===
